@import "tailwindcss";

@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

@theme {
  --shadow-center: 0 0 12px -2px rgb(0 0 0 / 0.05);
  --animate-pulse-fast: pulse 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@plugin "daisyui" {
  themes:
    light,
    dark --prefersdark;
}

@plugin "daisyui/theme" {
  name: "light";

  --color-primary: #93bbfb;
  --color-primary-content: #212638;
  --color-secondary: #dae8ff;
  --color-secondary-content: #212638;
  --color-accent: #93bbfb;
  --color-accent-content: #212638;
  --color-neutral: #212638;
  --color-neutral-content: #ffffff;
  --color-base-100: #ffffff;
  --color-base-200: #f4f8ff;
  --color-base-300: #dae8ff;
  --color-base-content: #212638;
  --color-info: #93bbfb;
  --color-success: #34eeb6;
  --color-warning: #ffcf72;
  --color-error: #ff8863;

  --radius-field: 9999rem;
  --radius-box: 1rem;
  --tt-tailw: 6px;
}

@plugin "daisyui/theme" {
  name: "dark";

  --color-primary: #212638;
  --color-primary-content: #f9fbff;
  --color-secondary: #323f61;
  --color-secondary-content: #f9fbff;
  --color-accent: #4969a6;
  --color-accent-content: #f9fbff;
  --color-neutral: #f9fbff;
  --color-neutral-content: #385183;
  --color-base-100: #385183;
  --color-base-200: #2a3655;
  --color-base-300: #212638;
  --color-base-content: #f9fbff;
  --color-info: #385183;
  --color-success: #34eeb6;
  --color-warning: #ffcf72;
  --color-error: #ff8863;

  --radius-field: 9999rem;
  --radius-box: 1rem;

  --tt-tailw: 6px;
  --tt-bg: var(--color-primary);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  p {
    margin: 1rem 0;
  }

  body {
    min-height: 100vh;
  }

  h1,
  h2,
  h3,
  h4 {
    margin-bottom: 0.5rem;
    line-height: 1;
  }
}

:root,
[data-theme] {
  background: var(--color-base-200);
}

.btn {
  @apply shadow-md;
}

.btn.btn-ghost {
  @apply shadow-none;
}

.link {
  text-underline-offset: 2px;
}

.link:hover {
  opacity: 80%;
}


/* home page */
html {
  scroll-behavior: smooth;
}

/* Add transitions */
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Add animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes gradient-x {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.animate-gradient-x {
  animation: gradient-x 8s ease infinite;
}

.animation-delay-700 {
  animation-delay: 700ms;
}

.animation-delay-1000 {
  animation-delay: 1000ms;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

/* Hero background with overlay and grid effect */
.bg-hero {
  background-image: url("https://res.cloudinary.com/dxswouxj5/image/upload/v1747934020/illustration-abstract-glowing-neon-light-effects-great-futuristic-background_ahr7zj.jpg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
}

/* Light/Dark adaptive overlay */
.bg-hero::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7));
  z-index: 0;
}

/* Light mode specific overlay adjustment */
@media (prefers-color-scheme: light) {
  .bg-hero::after {
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.8));
  }
}

[data-theme="light"] .bg-hero::after {
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.65), rgba(0, 0, 0, 0.8));
}

/* Subtle glow effect */
.bg-hero::before {
  content: "";
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at 50% 50%, rgba(0, 183, 255, 0.2), transparent 70%);
  z-index: 1;
  pointer-events: none;
  filter: blur(40px);
}

/* Lightning effects have been moved to lightning.css */
@import url('./lightning.css');

/* Shadow glow effects for light and dark mode */
.shadow-glow-sm {
  box-shadow: 0 0 10px rgba(147, 187, 251, 0.2);
}

.shadow-glow-md {
  box-shadow: 0 0 20px rgba(147, 187, 251, 0.3);
}

.shadow-glow-lg {
  box-shadow: 0 0 30px rgba(147, 187, 251, 0.4);
}

/* Dark mode adjustments for glows */
.dark .shadow-glow-sm {
  box-shadow: 0 0 10px rgba(73, 105, 166, 0.35);
}

.dark .shadow-glow-md {
  box-shadow: 0 0 20px rgba(73, 105, 166, 0.45);
}

.dark .shadow-glow-lg {
  box-shadow: 0 0 30px rgba(73, 105, 166, 0.55);
}

/* Background grid pattern */
.bg-grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(100, 100, 100, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(100, 100, 100, 0.1) 1px, transparent 1px);
  background-size: 40px 40px;
}

.dark .bg-grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 40px 40px;
}

@layer utilities {
  .animate-fade {
    animation: fadeIn 0.3s ease-in-out;
  }

  .animate-slide-up {
    animation: slideUp 0.3s ease-out;
  }

  .animate-slide {
    animation: slide 0.3s ease-out;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide {
    from {
      opacity: 0;
      transform: translateX(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
}